package net.mind_engine.oculus.testrunframework.performance;

import java.util.Date;

import net.mind_engine.oculus.testrunframework.chart.Chart;
import net.mind_engine.oculus.testrunframework.chart.LineChart;
import net.mind_engine.oculus.testrunframework.chart.data.LineChartDataPoint;
import net.mind_engine.oculus.testrunframework.chart.data.LineChartDataSet;


public class DelayMeasurementDataCollector implements DataCollector
{
    protected LineChart lineChart;
    private Date countdownStartDate;
    
    private LineChartDataSet currentDataSet;
    private Object currentXValue;
    public void createDataset(String name, String color)
    {
        currentDataSet = new LineChartDataSet(name, color);
        lineChart.addDataSet(currentDataSet);
    }
    
    public DelayMeasurementDataCollector(String title, String xAxisName, String yAxisName)
    {
        lineChart = new LineChart(title, xAxisName, null, yAxisName, Chart.AXIS_TYPE_FLOAT);
    }
    private void startCountdown(Object xValue)
    {
        countdownStartDate = new Date();
        this.currentXValue = xValue;
    }
    public void stopCountdown()
    {
        Date endDate = new Date();
        long ms = endDate.getTime() - countdownStartDate.getTime();
        Float flMS =  (float)(((float) ms)/1000.0);
        currentDataSet.addDataPoint(new LineChartDataPoint(currentXValue, flMS));
    }
    
    public void startCountdownInt(Integer xValue)
    {
        checkXAxisType(Chart.AXIS_TYPE_INT);
        startCountdown(xValue);
    }
    public void startCountdownFloat(Float xValue)
    {
        checkXAxisType(Chart.AXIS_TYPE_FLOAT);
        startCountdown(xValue);
    }
    public void startCountdownDate(Date xValue)
    {
        checkXAxisType(Chart.AXIS_TYPE_DATE);
        startCountdown(xValue);
    }
    
    private void checkXAxisType(String type)
    {
        if(lineChart.getXAxisType()==null)
        {
            lineChart.setXAxisType(type);
        }
        else if(!lineChart.getXAxisType().equals(type))
        {
            throw new RuntimeException("You should use only one axis type for all data");
        }
    }
    
    @Override
    public Chart getChart()
    {
        return lineChart;
    }
}
